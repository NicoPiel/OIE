// build.gradle (Root Project)

plugins {
    id 'base'
}

allprojects {
    group = 'com.mirth.connect' // Or your organization's group
    version = rootProject.version
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco' // Apply JaCoCo to all subprojects

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8 // Example, verify Mirth 4.5.2's requirement
        targetCompatibility = JavaVersion.VERSION_1_8 // Example, verify Mirth 4.5.2's requirement
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    dependencies {
        // Common compileOnly dependencies (likely provided by server runtime)
        // These are declared here so testImplementation below can use them easily
        compileOnly 'org.apache.commons:commons-lang3:3.13.0'
        compileOnly 'commons-io:commons-io:2.13.0'
        compileOnly 'org.apache.commons:commons-collections4:4.4'
        compileOnly 'org.apache.commons:commons-dbcp2:2.0.1'
        compileOnly 'commons-beanutils:commons-beanutils:1.9.4'
        compileOnly 'commons-codec:commons-codec:1.16.0'
        compileOnly 'org.apache.commons:commons-pool2:2.3'
        compileOnly 'commons-dbutils:commons-dbutils:1.7'
        compileOnly 'org.apache.commons:commons-math3:3.0'
        compileOnly 'commons-logging:commons-logging:1.2'
        compileOnly 'com.thoughtworks.xstream:xstream:1.4.20'
        compileOnly 'xpp3:xpp3_min:1.1.4c'
        compileOnly 'com.zaxxer:HikariCP:2.5.1'
        compileOnly 'org.javassist:javassist:3.26.0-GA'
        compileOnly 'org.apache.logging.log4j:log4j-api:2.17.2'
        compileOnly 'org.apache.logging.log4j:log4j-1.2-api:2.17.2'
        compileOnly 'org.slf4j:slf4j-api:1.7.30'
        compileOnly 'org.apache.derby:derby:10.10.2.0'
        compileOnly 'net.sourceforge.jtds:jtds:1.3.1'
        compileOnly 'com.microsoft.sqlserver:mssql-jdbc:8.4.1.jre8'
        compileOnly 'com.mysql:mysql-connector-j:8.2.0'
        compileOnly 'com.oracle.database.jdbc:ojdbc8:12.2.0.1'
        compileOnly 'org.postgresql:postgresql:42.6.0'
        compileOnly 'xmlpull:xmlpull:1.1.3.1'

        // --- Common Test Dependencies ---
        testImplementation 'junit:junit:4.8.1'
        testImplementation 'org.mockito:mockito-core:2.7.9'
        testImplementation 'net.bytebuddy:byte-buddy:1.8.8'
        testImplementation 'net.bytebuddy:byte-buddy-agent:1.8.8'
        testImplementation 'org.objenesis:objenesis:2.5.1'
        testImplementation 'org.glassfish.hk2.external:aopalliance-repackaged:2.4.0-b31'
        testImplementation 'javax.inject:javax.inject:1'

        // Provide implementations for compileOnly dependencies needed during testing
        testImplementation 'org.apache.commons:commons-lang3:3.13.0'
        testImplementation 'commons-io:commons-io:2.13.0'
        testImplementation 'org.apache.commons:commons-collections4:4.4'
        testImplementation 'org.apache.commons:commons-dbcp2:2.0.1'
        testImplementation 'commons-beanutils:commons-beanutils:1.9.4'
        testImplementation 'commons-codec:commons-codec:1.16.0'
        testImplementation 'org.apache.commons:commons-pool2:2.3'
        testImplementation 'commons-dbutils:commons-dbutils:1.7'
        testImplementation 'org.apache.commons:commons-math3:3.0'
        testImplementation 'commons-logging:commons-logging:1.2'
        testImplementation 'com.thoughtworks.xstream:xstream:1.4.20'
        // xpp3 is transitive via xstream
        testImplementation 'com.zaxxer:HikariCP:2.5.1'
        testImplementation 'org.javassist:javassist:3.26.0-GA'

        // Provide Logging implementation & binding for tests
        testRuntimeOnly 'org.apache.logging.log4j:log4j-core:2.17.2'
        testRuntimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'

        // Provide Database drivers for tests
        testRuntimeOnly 'org.apache.derby:derby:10.10.2.0'
        testRuntimeOnly 'org.apache.derby:derbytools:10.10.2.0'
        testRuntimeOnly 'net.sourceforge.jtds:jtds:1.3.1'
        testRuntimeOnly 'com.microsoft.sqlserver:mssql-jdbc:8.4.1.jre8'
        testRuntimeOnly 'com.mysql:mysql-connector-j:8.2.0'
        // testRuntimeOnly 'com.oracle.database.jdbc:ojdbc8:12.2.0.1' // Uncomment if needed
        testRuntimeOnly 'org.postgresql:postgresql:42.6.0'

        // Define JaCoCo agent version used by test tasks
        jacocoAgent 'org.jacoco:org.jacoco.agent:0.8.7' // Or use a variable
    }

    tasks.withType(Test) {
        useJUnit() // Common JUnit 4 setup

        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }

        // Apply JaCoCo agent to all test tasks
        jvmArgs += "-javaagent:${configurations.jacocoAgent.singleFile}=destfile=${buildDir}/jacoco/test.exec,inclnolocationclasses=false"

        finalizedBy jacocoTestReport // Ensure report runs AFTER tests finish
    }

    tasks.withType(JacocoReport) {
        dependsOn tasks.withType(Test) // Depends on test task completion

        reports {
            xml.required = true // Standard for CI
            csv.required = false
            html.required = true // Standard for developers
        }

        // Define sources for the report (common pattern)
        sourceDirectories.setFrom(files(sourceSets.main.allSource.srcDirs))
        classDirectories.setFrom(files(sourceSets.main.output.classesDirs))

        // Find execution data (common pattern)
        executionData.setFrom(fileTree(dir: buildDir, includes: ["jacoco/test.exec"]))
    }

    // Optional: Configure common JAR Manifest attributes
    // tasks.withType(Jar).configureEach { // Use configureEach for better performance
    //     manifest {
    //         attributes(
    //             'Implementation-Vendor': 'MyCompany', // Example common attribute
    //             'Implementation-Version': project.version
    //         )
    //     }
    // }
}

// You might want to exclude the root project from some configurations if needed
// configure(subprojects.findAll { it.name != 'some-special-subproject' }) { ... }